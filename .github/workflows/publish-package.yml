# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Rust Package

on:
  release:
    types: [created]
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    name: Build and test (${{ matrix.os }})

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: swatinem/rust-cache@v2
      - name: Build
        run: >
          cd rust &&
          cargo build
          --locked
          --verbose

      - name: Run tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: >
          cd rust &&
          cargo test
          --verbose

      - name: Run tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: >
          cd rust &&
          cargo install cargo-tarpaulin
          && cargo tarpaulin
          --verbose
          --out Xml
          --engine llvm
          --skip-clean
      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3

  publish:
    needs: build-test
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: |
          if [[ "${{ github.event.head_commit.message }}" =~ ^(docs:|chore:) ]]; then
            echo "Skipping npm publish due to commit message."
          else
            cd rust && cargo publish --token ${PUBLISH_KEY}
          fi

        env:
          PUBLISH_KEY: ${{ secrets.PUBLISH_KEY }}
