# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Rust Package

on:
  release:
    types: [created]
  pull_request:
    branches:
      - master

jobs:
  build-test:
    name: Build and test (${{ matrix.os }})

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: swatinem/rust-cache@v2
      - name: Build sidan-csl-rs
        run: >
          cd packages/sidan-csl-rs &&
          cargo build
          --locked
          --verbose

      - uses: actions/checkout@v3
      - uses: swatinem/rust-cache@v2
      - name: Build whisky
        run: >
          cd packages/whisky &&
          cargo build
          --locked
          --verbose

      - name: Run core tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: >
          cd packages/sidan-csl-rs &&
          cargo test
          --verbose

      - name: Run rust tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: >
          cd packages/whisky &&
          echo "MAESTRO_API_KEY=${{ secrets.MAESTRO_API_KEY }}" > .env &&
          cargo test --verbose

      - name: Run core tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: >
          cd packages/sidan-csl-rs &&
          cargo install cargo-tarpaulin
          && cargo tarpaulin
          --verbose
          --out Xml
          --engine llvm
          --skip-clean

      - name: Run rust tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: >
          cd packages/whisky &&
          echo "MAESTRO_API_KEY=${{ secrets.MAESTRO_API_KEY }}" > .env &&
          cargo install cargo-tarpaulin
          && cargo tarpaulin
          --verbose
          --out Xml
          --engine llvm
          --skip-clean

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
